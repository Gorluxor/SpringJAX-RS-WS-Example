
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.spring.soap.ws.address;

import java.util.Collections;
import java.util.Enumeration;
import java.util.Vector;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import com.spring.soap.ws.address.data.Contact;
import com.spring.soap.ws.address.data.ContactArray;

import com.spring.soap.ws.address.data.ObjectFactory;

/**
 * This class was generated by Apache CXF 3.2.1
 * 2020-12-26T14:56:20.993+01:00
 * Generated source version: 3.2.1
 * 
 */

@WebService(
                      serviceName = "AddressBookService",
                      portName = "AddressBookPort",
                      targetNamespace = "http://soap.spring.com/ws/address",
                     // wsdlLocation = "classpath:wsdl/AddressBook.wsdl",
                      endpointInterface = "com.spring.soap.ws.address.AddressBook")
                      
public class AddressBookPortImpl implements AddressBook {

    private static final Logger LOG = Logger.getLogger(AddressBookPortImpl.class.getName());
    
    private Vector<Contact> contacts = new Vector<Contact>();
    
    /* (non-Javadoc)
     * @see com.spring.soap.ws.address.AddressBook#addContactSeparated(java.lang.String firstName, java.lang.String lastName, java.lang.String email, net.java.dev.jaxb.array.StringArray phones, int defaultPhoneIndex)*
     */
    public int addContactSeparated(java.lang.String firstName, java.lang.String lastName, java.lang.String email, net.java.dev.jaxb.array.StringArray phones, int defaultPhoneIndex) { 
        LOG.info("Executing operation addContactSeparated");
        System.out.println(firstName);
        System.out.println(lastName);
        System.out.println(email);
        System.out.println(phones);
        System.out.println(defaultPhoneIndex);
        try {
        	Contact contact = new Contact();
            contact.setFirstName(firstName);
            contact.setLastName(lastName);
            contact.setEmail(email);
            contact.setPhones(new Contact.Phones());
        	contact.setDefaultPhoneIndex(defaultPhoneIndex);
        	contacts.add(contact);
        	return contacts.size() - 1;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.spring.soap.ws.address.AddressBook#getContact(int index)*
     */
    public com.spring.soap.ws.address.data.Contact getContact(int index) { 
        LOG.info("Executing operation getContact");
        System.out.println(index);
        try {
        	System.out.println("Invoked getContact");
    		return (Contact)contacts.get(index);
           
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.spring.soap.ws.address.AddressBook#getContacts()*
     */
    public com.spring.soap.ws.address.data.ContactArray getContacts() { 
        LOG.info("Executing operation getContacts");
        try {
        	System.out.println("Invoked getContacts");
    		return toArray(contacts);
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.spring.soap.ws.address.AddressBook#removeContact(int index)*
     */
    public void removeContact(int index) { 
        LOG.info("Executing operation removeContact");
        System.out.println(index);
        try {
        	System.out.println("Invoked removeContact");
    		contacts.remove(index);        	
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.spring.soap.ws.address.AddressBook#addContact(com.spring.soap.ws.address.data.Contact contact)*
     */
    public int addContact(com.spring.soap.ws.address.data.Contact contact) { 
        LOG.info("Executing operation addContact");
        System.out.println(contact);
        try {
        	contacts.add(contact);
    		System.out.println("Invoked addContact: " + contact.getFirstName());
            return contacts.size() - 1;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
    
    private ContactArray toArray(Vector<Contact> contacts) {
        if(contacts.size() == 0)
            return null;
        ObjectFactory factory = new ObjectFactory();
        ContactArray contactArray = factory.createContactArray();
        
        for (Contact contact : contacts) {
			contactArray.getItem().add(contact);
		}
        
        return contactArray;
    }
    

}
